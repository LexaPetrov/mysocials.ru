{"version":3,"sources":["components/Layout.js","reducer/actiontypes.js","reducer/reducer.js","components/Icon.js","components/Loader.js","utils/env.js","reducer/actions.js","components/ProfileScreen.js","components/Input.js","utils/backgrounds.js","components/MainScreen.js","components/SettingsScreen.js","components/PrivacyScreen.js","App.js","index.js"],"names":["Layout","props","className","children","START_LOADING","STOP_LOADING","REGISTER","LOGIN","SELECT_PROFILE","GET_COUNT","initialState","password","email","name","username","bio","birthday","verified","links","data","title","link","type","avatar","cover","reducer","state","action","undefined","payload","errno","success","JSON","parse","count","isLoading","Icon","size","style","verticalAlign","cursor","onClick","src","width","height","alt","marginLeft","text","Loader","BACKEND_HOST","register","dispatch","a","fetch","method","mode","headers","body","stringify","then","r","json","catch","e","finally","ProfileScreen","useReducer","useState","menu","setMenu","useEffect","res","actions","window","location","pathname","replace","formatLink","href","formatHref","includes","background","display","flexDirection","alignItems","fontSize","fontWeight","open","textField","document","createElement","innerText","appendChild","select","execCommand","remove","marginRight","map","v","index","Input","htmlFor","placeholder","value","onChange","renderInput","issetting","inputplaceholder","backgrounds","MainScreen","loginBtn","setLoginBtn","formstate","setFormstate","username_login","password_login","formloginstate","setFormloginstate","captcha","setCaptcha","onSubmitRegister","preventDefault","onFormChange","target","onFormLoginChange","err","hash","onLoadCaptcha","verifyCallback","matchMedia","matches","onSubmit","textAlign","required","minLength","disabled","some","length","alignSelf","sitekey","render","onloadCallback","theme","hl","id","to","SettingsScreen","tabs","active","setTabs","password_delete","settings","setSettings","onInputChange","encodeImageFileAsURL","param","file","files","reader","FileReader","sizeKB","onloadend","result","readAsDataURL","alert","changeLinkTitleAndLinkAndIcon","obj","_title","onSaveClickHandler","changeBackground","generatePlaceholder","onDeleteClickHandler","confirm","wrap","rows","boxSizing","minWidth","resize","color","i","push","val","arr","splice","deleteLinkHandler","PrivacyScreen","App","path","exact","component","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.e8eb463d.chunk.js","sourcesContent":["\r\nconst Layout = props => {\r\n\r\n    return(\r\n        <div className=\"main__layout__wrapper\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","export const START_LOADING = 'START_LOADING',\r\n             STOP_LOADING = 'STOP_LOADING',\r\n             REGISTER = 'REGISTER',\r\n             LOGIN = 'LOGIN',\r\n             SELECT_PROFILE = 'SELECT_PROFILE',\r\n             SAVE_PROFILE= 'SAVE_PROFILE',\r\n             GET_COUNT = 'GET_COUNT'; \r\n","import {\r\n    STOP_LOADING,\r\n    START_LOADING,\r\n    REGISTER,\r\n    SELECT_PROFILE,\r\n    LOGIN,\r\n    GET_COUNT\r\n} from './actiontypes'\r\n\r\nconst initialState = {\r\n    password: '',\r\n    email: '',\r\n    name: '',\r\n    username: '',\r\n    bio: '',\r\n    birthday: '',\r\n    verified: false,\r\n    links: {\r\n        data: [\r\n            {\r\n                title: '',\r\n                link: '',\r\n                type: 'link'\r\n            }\r\n        ]\r\n    },\r\n    avatar: '',\r\n    cover: ''\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REGISTER:\r\n            if (action.payload.data !== undefined && action.payload.data.errno) {\r\n                return {\r\n                    ...state,\r\n                    success: false\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    username: action.payload.username,\r\n                    email: action.payload.email,\r\n                    password: action.payload.password,\r\n                    success: true\r\n                }\r\n            }\r\n        case LOGIN:\r\n            if (action.payload.data.data[0]) {\r\n                return {\r\n                    ...state,\r\n                    ...action.payload.data.data[0],\r\n                    success: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state, success: false\r\n                }\r\n            }\r\n        case SELECT_PROFILE:\r\n            return {\r\n                ...state,\r\n                ...action.payload[0],\r\n                links: JSON.parse(action.payload[0].links)\r\n            }\r\n        case GET_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.payload[0]\r\n            }\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","const Icon = props => {\r\n\r\n    return (\r\n        <span\r\n            className={props.className}\r\n            size={props.size}\r\n            type={props.type}\r\n            style={{\r\n                'alignSelf': 'center',\r\n                verticalAlign: 'middle',\r\n                cursor: 'pointer',\r\n                // display: 'flex',\r\n                // flexDirection: 'row',\r\n                // alignItems: 'center',\r\n                ...props.style\r\n            }}\r\n            onClick={props.onClick}\r\n        >\r\n            {\r\n                props.type && <img\r\n                    src={'/img/' + props.type + '.png'}\r\n                    style={{\r\n                        width: props.size + 'px',\r\n                        height: props.size + 'px'\r\n                    }}\r\n                    alt='icon'\r\n                />\r\n            }\r\n            <span style={{ marginLeft:  props.type && '10px' }}>{props.text}</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Icon\r\n","const Loader = props => {\r\n\r\n    return (\r\n        <div className={'LoaderWrapper'}>\r\n            <div className={'Loader'}><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","export const BACKEND_HOST = 'https://mysocials-ru-server.herokuapp.com'\r\n// export const BACKEND_HOST = 'http://localhost:4000'","\r\nimport {\r\n    REGISTER, LOGIN,\r\n    START_LOADING, STOP_LOADING,\r\n    SELECT_PROFILE, GET_COUNT\r\n} from './actiontypes'\r\n\r\nimport { BACKEND_HOST } from '../utils/env'\r\n\r\nexport const register = async (username, email, password, dispatch) => {\r\n    dispatch({ type: START_LOADING })\r\n    await fetch(`${BACKEND_HOST}/api/register`, {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username, email, password\r\n        })\r\n    }).then(r => {\r\n        return r.json()\r\n    }).then(r => {\r\n        // console.log(r);\r\n        dispatch({ type: REGISTER, payload: { username, email, password, data: r } })\r\n    }).catch(e => {\r\n        // console.log('register error - ', e)\r\n        dispatch({ type: REGISTER, payload: { success: false, username, email, password } })\r\n    }).finally(() => {\r\n        dispatch({ type: STOP_LOADING })\r\n    })\r\n}\r\n\r\nexport const login = (username, password, dispatch) => {\r\n    dispatch({ type: START_LOADING })\r\n    fetch(`${BACKEND_HOST}/api/login/`, {\r\n        method: 'post',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username, password\r\n        })\r\n    }).then(r => {\r\n        return r.json()\r\n    }).then(r => {\r\n        dispatch({ type: LOGIN, payload: { username, password, data: r } })\r\n    }).catch(e => {\r\n        // console.log('register error - ', e)\r\n        dispatch({ type: LOGIN, payload: { success: false, username, password } })\r\n    }).finally(() => {\r\n        dispatch({ type: STOP_LOADING })\r\n    })\r\n}\r\n\r\nexport const select_profile = (username, dispatch) => {\r\n    dispatch({ type: START_LOADING })\r\n    fetch(`${BACKEND_HOST}/api/user/` + username, {\r\n        mode: 'cors'\r\n    }).then(res => {\r\n        return res.json()\r\n    }).then(res => {\r\n        dispatch({ type: SELECT_PROFILE, payload: res.data })\r\n    }).finally(() => {\r\n        dispatch({ type: STOP_LOADING })\r\n    })\r\n}\r\n\r\nexport const save_profile = (data, dispatch) => {\r\n    dispatch({ type: START_LOADING })\r\n    fetch(`${BACKEND_HOST}/api/save`, {\r\n        mode: 'cors',\r\n        method: 'put',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ data })\r\n    }).then(res => {\r\n        return res.json()\r\n    }).then(res => {\r\n        // dispatch({type: SAVE_PROFILE, payload: res.data})\r\n    }).finally(() => {\r\n        dispatch({ type: STOP_LOADING })\r\n    })\r\n}\r\n\r\nexport const get_count = (dispatch) => {\r\n    fetch(`${BACKEND_HOST}/api/getcount`)\r\n        .then(res => res.json())\r\n        .then((res) => {\r\n            dispatch({ type: GET_COUNT, payload: res })\r\n        })\r\n        .catch(err => {\r\n            // console.log(err)\r\n        })\r\n}\r\n\r\nexport const delete_user = (username, password, dispatch) => {\r\n    fetch(`${BACKEND_HOST}/api/delete?username=` + username + '&password=' + password)\r\n        .then(res => res.json())\r\n        .then((res) => {\r\n\r\n        })\r\n        .catch(err => {\r\n            // console.log(err)\r\n        })\r\n}\r\n","import { useEffect, useReducer, useState } from 'react'\r\nimport reducer from '../reducer/reducer';\r\nimport Icon from './Icon';\r\nimport Loader from './Loader'\r\nimport * as actions from '../reducer/actions'\r\n\r\nconst ProfileScreen = props => {\r\n    const [state, dispatch] = useReducer(reducer, {})\r\n    const [menu, setMenu] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let username = window.location.pathname.replace('/', '')\r\n        actions.select_profile(username, dispatch)\r\n    }, [])\r\n\r\n    const copyToClipboard = () => {\r\n        let textField = document.createElement('textarea')\r\n        textField.innerText = window.location.href\r\n        document.body.appendChild(textField)\r\n        textField.select()\r\n        document.execCommand('copy')\r\n        textField.remove()\r\n    }\r\n\r\n\r\n    const formatLink = (type, link) => {\r\n        switch (type) {\r\n            case 'gmail': case 'mailru': case 'email': case 'yandexmail':\r\n                return (\r\n                    <a className='link__href' href={`mailto:${link}`}>{formatHref(link)}</a>\r\n                )\r\n            case 'viber':\r\n                return (\r\n                    <a className='link__href' href={`viber://add?number=${link}`}>{formatHref(link)}</a>\r\n                )\r\n            case 'whatsapp':\r\n                return (\r\n                    <a className='link__href' href={`https://api.whatsapp.com/send?phone=${link}`}>{formatHref(link)}</a>\r\n                )\r\n            case 'skype':\r\n                return (\r\n                    <a className='link__href' href={`skype:${link}?chat`}>{formatHref(link)}</a>\r\n                )\r\n            case 'phone':\r\n                return (\r\n                    <a className='link__href' href={`tel:${link}`}>{formatHref(link)}</a>\r\n                )\r\n            default:\r\n                return (\r\n                    <a className='link__href' href={`${link}`}>{formatHref(link)}</a>\r\n                )\r\n        }\r\n    }\r\n\r\n    const formatHref = link => {\r\n        if (link.includes('http://')) {\r\n            link = link.replace('http://', '')\r\n        }\r\n        if (link.includes('https://')) {\r\n            link = link.replace('https://', '')\r\n        }\r\n        if (link.includes('www.')) {\r\n            link = link.replace('www.', '')\r\n        }\r\n\r\n        return link\r\n    }\r\n\r\n    if (state.isLoading) return <Loader />;\r\n    return (\r\n        <>\r\n            <div className=\"main__layout__wrapper-header \" style={{\r\n                background: state.cover !== null && state.cover !== undefined && state.cover.includes('data') && state.cover !== '' && state.cover !== 'null' ? `center / contain url(${state.cover})` : `${state.cover}`\r\n            }}>\r\n\r\n                <Icon text='☰' style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    width: '20px', height: '20px'\r\n                }} className='button menu-button' onClick={() => setMenu(!menu)} />\r\n                {\r\n                    menu && <div className=\"dropdown-content visible\">\r\n                        <Icon size='17' type='sparkles' style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center'\r\n                        }} onClick={() => window.open('https://mysocials.ru', '_self')} text='mysocials.ru - на главную' />\r\n                         <Icon type='darts' size='17' style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }} onClick={() => window.open('https://mysocials.ru/#register', '_self')} text='создать профиль' />\r\n                         <Icon type='edit' size='17' style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }} onClick={() => window.open('https://mysocials.ru/#login', '_self')} text='редактировать профиль' />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"main__layout__wrapper-content\">\r\n                <div className=\"main__layout__wrapper-content__left\">\r\n                    <div className='avatar' style={{\r\n                        background: state.avatar !== null && state.avatar !== undefined && state.avatar.includes('data') && state.avatar !== '' && state.avatar !== 'null' ? `url(${state.avatar})` : `${state.avatar}`,\r\n                    }}></div>\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile__name\">\r\n                            <div className=\"profile__name-name\">\r\n                                {state.name} {state.verified ? <Icon type='verified' size='20' /> : null}\r\n                            </div>\r\n                            <div className=\"profile__name-menu edit\">\r\n                                <button className=\"dropbtn\">•••</button>\r\n                                <div className=\"dropdown-content\">\r\n                                    <Icon onClick={copyToClipboard} text='Копировать ссылку' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__username\">\r\n                            {'@' + state.username}\r\n                        </div>\r\n                        {\r\n                            state.bio !== null && state.bio !== 'null' && <div className=\"profile__bio\">\r\n                                {state.bio}\r\n                            </div>\r\n                        }\r\n                        {\r\n                            state.birthday !== null && state.birthday !== 'null' && <div className=\"profile__birthday\">\r\n                                <Icon type='birthday' size='16' text={state.birthday} style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center'\r\n                                }} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    {/* <div className=\"left-links\">\r\n                        <p><a href='https://mysocials.ru/privacy'>Конфиденциальность</a></p>\r\n                        <p><a href='https://mysocials.ru/'>mysocials.ru</a></p>\r\n                    </div> */}\r\n                </div>\r\n                <div style={{ marginRight: '20px', height: '20px' }}></div>\r\n                <div className=\"main__layout__wrapper-content__main\">\r\n                    <div className=\"links\">\r\n                        {\r\n                            state.links !== 'null' && state.links !== null && state.links !== undefined && state.links.data.map((v, index) => {\r\n                                return (\r\n                                    <div className='link__wrapper profile__link__wrapper' key={index}>\r\n                                        <div className='link__icon profile__link__icon'>\r\n                                            <img src={`img/${state.links.data[index].type}.png`} alt='icon' />\r\n                                        </div>\r\n                                        <div className='link__texts profile__link__texts'>\r\n                                            <div className='link__title'>{v.title}</div>\r\n                                            {formatLink(v.type, v.link)}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"left-links\">\r\n                <p><a href='https://mysocials.ru/privacy'>Конфиденциальность</a></p>\r\n                <p><a href='https://mysocials.ru/'>mysocials.ru</a></p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import Icon from \"./Icon\"\r\n\r\nconst Input = props => {\r\n\r\n    const renderInput = type => {\r\n        switch (type) {\r\n            case 'textarea':\r\n                return (\r\n                    <textarea\r\n                        name={props.name}\r\n                        className='input__input'\r\n                        placeholder=\" \"\r\n                        type={props.type}\r\n                        value={props.value}\r\n                        onChange={props.onChange}\r\n                        {...props}\r\n                    />\r\n                )\r\n            default:\r\n                return (\r\n                    <input\r\n                        name={props.name}\r\n                        className='input__input'\r\n                        placeholder=\" \"\r\n                        type={props.type}\r\n                        value={props.value}\r\n                        onChange={props.onChange}\r\n                        {...props}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <label className='input__label' htmlFor={props.name}>\r\n            {renderInput(props.type)}\r\n            <span className='input__span'>{props.issetting ? <Icon type='edit' size='16' /> : null} {props.inputplaceholder}</span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Input","export const backgrounds = [\r\n    'linear-gradient(90deg, #f598a8, #f6edb2)',\r\n    'linear-gradient(90deg, #faf0cd, #fab397)',\r\n    'linear-gradient(90deg, #cfecd0, #a0cea7, #9ec0db)',\r\n    'linear-gradient(90deg, #cfecd0, #ffc5ca)',\r\n    'linear-gradient(90deg, #b9deed, #efefef)',\r\n    'linear-gradient(90deg, #aea4e3, #d3ffe8)',\r\n    'linear-gradient(90deg, #69b7eb, #b3dbd3, #f4d6db)',\r\n    'linear-gradient(90deg, #ee5c87, #f1a4b5, #d587b3)',\r\n    'linear-gradient(85deg, #fb63f9, #c2e534)',\r\n    'linear-gradient(21deg, #dd03e4, #5611ec)',\r\n    'linear-gradient(4deg, #5462c3, #ba872c)',\r\n    'background: linear-gradient(81deg, #ddb35f, #7409c7)',\r\n    'linear-gradient(135deg, #e55d87 0%, #5fc3e4 100%)',\r\n    'linear-gradient(3deg, #e6d16c, #16014c)',\r\n    'linear-gradient(66deg, #e38010, #1535bf)',\r\n    'linear-gradient(rgba(135, 60, 255, 0.4), rgba(135, 60, 255, 0.0) 80%), linear-gradient(-45deg, rgba(120, 155, 255, 0.9) 25%, rgba(255, 160, 65, 0.9) 75%)',\r\n    'linear-gradient(limegreen, transparent), linear-gradient(90deg, skyblue, transparent), linear-gradient(-90deg, coral, transparent)',\r\n    'linear-gradient(#c6e4ee 0%, #c6e4ee 40%, #fed1ae 60%, #faa0b9 70%, #cb7dcb 80%, #757ecb 100%)',\r\n    'linear-gradient(to right, #f00, #ffa500, #ff0, #008000, #00f, #4b0082, #ee82ee)',\r\n    'linear-gradient(to bottom, #b721ff, #2af598, #fec051, #fee140, #fa709a)',\r\n    'linear-gradient(45deg, #F17C58, #E94584, #24AADB, #27DBB1, #FFDC18, #FF3706)',\r\n    'radial-gradient(ellipse farthest-corner at right bottom, #fedb37 0%, #FDB931 8%, #9f7928 30%, #8a6e2f 40%, transparent 80%), radial-gradient(ellipse farthest-corner at left top, #ffffff 0%, #ffffac 8%, #d1b464 25%, #5d4a1f 62.5%, #5d4a1f 100%)',\r\n    'linear-gradient(red, transparent), linear-gradient(to top left, lime, transparent), linear-gradient(to top right, blue, transparent)'\r\n]","import { useEffect, useReducer, useState } from \"react\"\r\nimport * as actions from '../reducer/actions'\r\nimport reducer from '../reducer/reducer'\r\nimport Loader from './Loader'\r\nimport Input from './Input'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Icon from \"./Icon\"\r\nimport { backgrounds } from '../utils/backgrounds'\r\nimport Recaptcha from 'react-recaptcha'\r\n\r\nconst MainScreen = props => {\r\n    const [state, dispatch] = useReducer(reducer, {})\r\n    const [loginBtn, setLoginBtn] = useState(false)\r\n    const [formstate, setFormstate] = useState({\r\n        username: '', email: '', password: ''\r\n    })\r\n    const [formloginstate, setFormloginstate] = useState({\r\n        username_login: '', password_login: ''\r\n    })\r\n    const [captcha, setCaptcha] = useState(true)\r\n\r\n    const onSubmitRegister = async (e) => {\r\n        e.preventDefault();\r\n        await actions.register(formstate.username, formstate.email, formstate.password, dispatch)\r\n        setLoginBtn(!loginBtn)\r\n    }\r\n\r\n\r\n    const onFormChange = e => {\r\n        setFormstate({\r\n            ...formstate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onFormLoginChange = e => {\r\n        setFormloginstate({\r\n            ...formloginstate,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitLogin = e => {\r\n        e.preventDefault();\r\n        actions.login(formloginstate.username_login, formloginstate.password_login, dispatch)\r\n    }\r\n    // let bg = backgrounds[Math.floor(Math.random() * (backgrounds.length+1 + 0) - 0)]\r\n\r\n    useEffect(() => {\r\n        actions.get_count(dispatch)\r\n        if (window.location.hash === '#login') {\r\n            setLoginBtn(true)\r\n        } else if (window.location.hash === '#register') {\r\n            setLoginBtn(false)\r\n        }\r\n    }, [])\r\n\r\n    const onLoadCaptcha = () => {\r\n        setCaptcha(false)\r\n    }\r\n\r\n    const verifyCallback = res => {\r\n        if (res) {\r\n            setCaptcha(true)\r\n        }\r\n    }\r\n\r\n    if (state.isLoading) return <Loader />;\r\n    return (\r\n        <>\r\n            <div className=\"main__layout__wrapper-header main__header\" style={{\r\n                background: backgrounds[15]\r\n            }}><h1 onClick={() => window.location = 'http://mysocials.ru/'}>\r\n                <Icon type='smartphone' size ='37'/> \r\n                MYSOCIALS.RU</h1>\r\n                <p>Страница с мультиссылкой на любые сервисы бесплатно</p>\r\n            </div>\r\n            {/* <Icon type='planet' size='20' style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                alignSelf: 'center',\r\n                margin: 'auto',\r\n                paddingTop: '20px',\r\n                fontSize: '20px'\r\n            }} text={state.count !== undefined ? `Нас уже ${state.count['COUNT(*)']}!` : null} /> */}\r\n            <div className=\"main__layout__wrapper-content\">\r\n                <div className=\"main__layout__wrapper-content__left\">\r\n                    <img style={{\r\n                        width: '100%'\r\n                    }} src={`/img/${window.matchMedia('(prefers-color-scheme: dark)').matches ? '2' : '1'}.png`} alt='img' />\r\n\r\n\r\n                </div>\r\n                <div className='mainscreen__content'>\r\n                    {\r\n                        !loginBtn && <form onSubmit={onSubmitRegister}>\r\n                            <p style={{ textAlign: 'center' }}>{!loginBtn ? 'Регистрация' : 'Авторизация'}</p>\r\n                            <hr></hr>\r\n\r\n                            <Input inputplaceholder='username' type='text' required value={formstate.username} onChange={e => onFormChange(e)} name='username' />\r\n                            <Input inputplaceholder='email' type='email' required value={formstate.email} onChange={e => onFormChange(e)} name='email' />\r\n                            <Input inputplaceholder='password' type='password' required value={formstate.password} onChange={e => onFormChange(e)} name='password' minLength='8' />\r\n                            <button type='submit' className='button button-success register_login' disabled={captcha === false || [formstate.username, formstate.email, formstate.password].some(v => v.length === 0)} >Создать аккаунт</button>\r\n                            {\r\n                                state.success !== undefined && !state.success && <Icon size='14' style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                }} type='cross' text='данный username занят' />\r\n                            }\r\n                            <div style={{ alignSelf: 'center' }}>\r\n                                <Recaptcha\r\n                                    sitekey=\"6Lcsc90ZAAAAABI13YttPvIZDEyXZ-ij36rg5W7F\"\r\n                                    render=\"explicit\"\r\n                                    verifyCallback={verifyCallback}\r\n                                    onloadCallback={onLoadCaptcha}\r\n                                    theme={window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'}\r\n                                    size='compact'\r\n                                    hl='ru'\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    }\r\n                    {\r\n                        loginBtn && <form id={!loginBtn ? 'register' : 'login'} onSubmit={onSubmitLogin}>\r\n                            <p style={{ textAlign: 'center' }}>{!loginBtn ? 'Регистрация' : 'Авторизация'}</p>\r\n                            <hr></hr>\r\n\r\n                            <Input inputplaceholder='username' type='text' required value={formloginstate.username_login} onChange={e => onFormLoginChange(e)} name='username_login' />\r\n                            <Input inputplaceholder='password' type='password' required value={formloginstate.password_login} onChange={e => onFormLoginChange(e)} name='password_login' minLength='8' />\r\n                            <button type='submit' className='button button-success register_login' disabled={captcha === false || [formloginstate.username_login, formloginstate.password_login].some(v => v.length === 0)} >Войти</button>\r\n                            {\r\n                                state.success !== undefined && !state.success && <Icon size='14' style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center',\r\n                                }} type='cross' text='неверный логин или пароль' />\r\n                            }\r\n                            <div style={{ alignSelf: 'center' }}>\r\n                                <Recaptcha\r\n                                    sitekey=\"6Lcsc90ZAAAAABI13YttPvIZDEyXZ-ij36rg5W7F\"\r\n                                    render=\"explicit\"\r\n                                    verifyCallback={verifyCallback}\r\n                                    onloadCallback={onLoadCaptcha}\r\n                                    theme={window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'}\r\n                                    size='compact'\r\n                                    hl='ru'\r\n                                />\r\n                            </div>\r\n                            {\r\n                                state.success && state.id !== undefined && <Redirect to={{\r\n                                    pathname: \"/settings\",\r\n                                    state\r\n                                }} />\r\n                            }\r\n                        </form>\r\n                    }\r\n                    <Icon size='14' className='button' style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        alignSelf: 'center'\r\n                    }} onClick={() => setLoginBtn(!loginBtn)} text={loginBtn ? 'Нет аккаунта? Создать' : 'Есть аккаунт? Войти'} />\r\n                    <div className=\"left-links main__screen\">\r\n                        <p><a href='/privacy'>Конфиденциальность</a></p>\r\n                        {/* <p><a href='/'>v1.0.5</a></p> */}\r\n                        {/* <p><a href='/'><img style={{ width: '170px', height: '50px' }} src='https://www.centrinvest.ru/images/mirpay/mp-gp.png' alt='img' /></a></p> */}\r\n                        <br></br>\r\n                        <br></br>\r\n                        <br></br>\r\n                        {/* <p><a href='https://heroku.com'>powered by Heroku</a></p> */}\r\n                        {/* <p><a href='https://twitter.com/admin'>mysocials.ru</a></p> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainScreen","import { useEffect, useReducer, useState } from 'react'\r\nimport Icon from './Icon'\r\nimport Input from './Input'\r\nimport Loader from './Loader'\r\nimport * as actions from '../reducer/actions'\r\nimport reducer from '../reducer/reducer'\r\nimport { backgrounds } from '../utils/backgrounds.js'\r\n\r\n\r\nconst SettingsScreen = props => {\r\n    const [state, dispatch] = useReducer(reducer, { ...props.location.state })\r\n    const [tabs, setTabs] = useState({\r\n        tabs: [\r\n            'settings', 'links', 'appearance'\r\n        ],\r\n        active: 'appearance'\r\n    })\r\n    const [settings, setSettings] = useState({\r\n        password: '',\r\n        email: '',\r\n        name: '',\r\n        username: '',\r\n        bio: '',\r\n        birthday: '',\r\n        verified: false,\r\n        links: {\r\n            data: [\r\n                {\r\n                    title: '',\r\n                    link: '',\r\n                    type: 'link'\r\n                }\r\n            ]\r\n        },\r\n        avatar: '',\r\n        cover: '',\r\n        password_delete: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setSettings({\r\n                ...settings,\r\n                ...props.location.state,\r\n                links: props.location.state.links !== undefined && JSON.parse(props.location.state.links),\r\n            })\r\n        } catch {\r\n            window.location = '/'\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    const onInputChange = e => {\r\n        setSettings({\r\n            ...settings,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const encodeImageFileAsURL = (e, param) => {\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n        let sizeKB = e.target.files[0].size / 1024\r\n        if (param === 'cover') {\r\n            reader.onloadend = function () {\r\n                setSettings({ ...settings, cover: reader.result })\r\n            }\r\n        } else {\r\n            reader.onloadend = function () {\r\n                setSettings({ ...settings, avatar: reader.result })\r\n            }\r\n        }\r\n\r\n        try {\r\n            if (sizeKB < 601) {\r\n                reader.readAsDataURL(file);\r\n            } else {\r\n                alert('Размер не должен превышать 600 KB')\r\n            }\r\n        } catch { }\r\n    }\r\n\r\n    const deleteLinkHandler = (index) => {\r\n        let arr = [...settings.links.data]\r\n        arr.splice(index, 1)\r\n        setSettings({\r\n            ...settings,\r\n            links: { data: arr }\r\n        })\r\n    }\r\n\r\n    const addLinkHandler = () => {\r\n        let obj = { data: [] }\r\n        if (settings.links === null || settings.links === 'null') {\r\n            obj = { data: [] }\r\n        } else obj = { ...settings.links }\r\n        if (!obj.data) {\r\n            obj = { data: [] }\r\n        }\r\n        obj.data.push({\r\n            title: '',\r\n            link: '',\r\n            type: 'link'\r\n        })\r\n        setSettings({\r\n            ...settings,\r\n            links: obj\r\n        })\r\n    }\r\n\r\n    const changeLinkTitleAndLinkAndIcon = (e, index) => {\r\n        let obj = { ...settings.links }\r\n        let _title = obj.data[index].title\r\n        if (e.target.name !== 'link') {\r\n            _title = e.target.value\r\n        }\r\n        obj.data[index] = {\r\n            ...obj.data[index],\r\n            [e.target.name]: e.target.value,\r\n            title: _title\r\n        }\r\n        setSettings({\r\n            ...settings,\r\n            links: obj\r\n        })\r\n    }\r\n\r\n    const onSaveClickHandler = (e) => {\r\n        e.preventDefault()\r\n        actions.save_profile(settings, dispatch)\r\n    }\r\n    const changeBackground = e => {\r\n        setSettings({\r\n            ...settings,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const generatePlaceholder = (type) => {\r\n        switch (type) {\r\n            case 'gmail': case 'mailru': case 'email': case 'yandexmail': return 'адрес почты'\r\n            case 'viber': case 'whatsapp': case 'phone': return 'номер телефона'\r\n            case 'skype': return 'логин skype'\r\n            default:\r\n                return 'вставь ссылку'\r\n        }\r\n    }\r\n\r\n    const onDeleteClickHandler = async () => {\r\n        if (settings.password_delete.length >= 8 && window.confirm(`Удалить аккаунт ${settings.username}? Действие нельзя отменить.`)) {\r\n            await actions.delete_user(settings.username, settings.password_delete, dispatch);\r\n            window.location = '/';\r\n        }\r\n    }\r\n\r\n\r\n    if (state.isLoading) return <Loader />;\r\n    return (\r\n        <>\r\n            <div className=\"main__layout__wrapper-header\" style={{\r\n                background: settings.cover !== null && settings.cover.includes('data') && settings.cover !== '' && settings.cover !== 'null' ? `center / contain url(${settings.cover})` : `${settings.cover}`,\r\n            }}>\r\n            </div>\r\n            <div className=\"main__layout__wrapper-content\">\r\n                <div className=\"main__layout__wrapper-content__left\">\r\n                    <div className='avatar' style={{\r\n                        background: settings.avatar !== null && settings.avatar.includes('data') && settings.avatar !== '' && settings.avatar !== 'null' ? `url(${settings.avatar})` : `${settings.avatar}`,\r\n                    }}>\r\n                    </div>\r\n                    <div className=\"profile no__sticky\">\r\n                        <div className=\"profile__name\">\r\n                            <div className=\"profile__name-name\">\r\n                                <Input\r\n                                    type='text'\r\n                                    inputplaceholder='Имя'\r\n                                    issetting={\"true\"}\r\n                                    name='name'\r\n                                    value={settings.name !== null ? settings.name : ''}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__username\">\r\n                            <Input\r\n                                type='text'\r\n                                inputplaceholder='@username'\r\n                                issetting={\"true\"}\r\n                                name='username'\r\n                                onChange={onInputChange}\r\n                                value={settings.username !== null ? settings.username : ''}\r\n                            />\r\n                        </div>\r\n                        <div className='button settings_link'>\r\n                            <a href={'https://mysocials.ru/' + settings.username}>{'https://mysocials.ru/' + settings.username}</a>\r\n                        </div>\r\n                        <div className=\"profile__bio profile__bio__settings\">\r\n                            <Input\r\n                                type='textarea'\r\n                                inputplaceholder='bio'\r\n                                issetting={\"true\"}\r\n                                name='bio'\r\n                                wrap='hard'\r\n                                rows='7'\r\n                                style={{\r\n                                    boxSizing: 'border-box',\r\n                                    minWidth: '260px',\r\n                                    resize: 'none'\r\n                                }}\r\n                                onChange={onInputChange}\r\n                                value={settings.bio}\r\n                            />\r\n                        </div>\r\n                        <div className=\"profile__birthday\">\r\n                            <Input\r\n                                type='date'\r\n                                inputplaceholder='Дата рождения'\r\n                                issetting={\"true\"}\r\n                                name='birthday'\r\n                                onChange={onInputChange}\r\n                                value={settings.birthday}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`settings ${tabs.active === 'appearance' ? 'active' : null} no__sticky`}>\r\n                        <Icon\r\n                            type='picture' size='17' text='Внешний вид' style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            onClick={() => {\r\n                                setTabs({\r\n                                    ...tabs, active: 'appearance'\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={`settings ${tabs.active === 'links' ? 'active' : null} no__sticky`}>\r\n                        <Icon\r\n                            type='link' size='17' text='Ссылки' style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            onClick={() => {\r\n                                setTabs({\r\n                                    ...tabs, active: 'links'\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={`settings ${tabs.active === 'settings' ? 'active' : null} no__sticky`}>\r\n                        <Icon\r\n                            type='settings' size='17' text='Настройки' style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            onClick={() => {\r\n                                setTabs({\r\n                                    ...tabs, active: 'settings'\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='settings__buttons no__sticky'>\r\n                        <div className='settings button button-success'>\r\n                            <Icon type='save' size='17' text='Сохранить' onClick={e => onSaveClickHandler(e)} style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                color: 'white'\r\n                            }} />\r\n                        </div>\r\n\r\n                        <div className='settings button button-danger'>\r\n                            <Icon type='cross' size='17' text='Отмена' onClick={() => window.location = `/${settings.username}`} style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                color: 'white'\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"left-links\">\r\n                        <p><a href='/privacy'>Конфиденциальность</a></p>\r\n                        <p><a href='http://mysocials.ru/'>mysocials.ru</a></p>\r\n                    </div>\r\n                </div>\r\n                <div style={{ width: '20px', height: '20px' }}></div>\r\n                <div className=\"main__layout__wrapper-content__main\">\r\n                    <div className={`settings_tab-appearance ${tabs.active === 'appearance' ? 'active-tab' : 'not-active-tab'}`}>\r\n                        <h3>Внешний вид</h3>\r\n                        <h4>Обложка</h4>\r\n                        <hr />\r\n                        <div className='appearance-wrapper'>\r\n                            <label className='change__cover' htmlFor='img__Cover'>\r\n                                <Icon style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center'\r\n                                }} type='camera' size='20' text='загрузить фото' />\r\n                                <input type=\"file\" id=\"img__Cover\" name='img__Cover' style={{ display: 'none' }} onChange={(e) => encodeImageFileAsURL(e, 'cover')} />\r\n                            </label>\r\n                            <small>(рекомендуемый размер: высота 180px, ширина 1920px и выше)</small>\r\n                            <select className='cover__background__select' name='cover' value='цвет' onChange={e => changeBackground(e)}>\r\n                                <option value='цвет' disabled=\"disabled\">цвет</option>\r\n                                {\r\n                                    backgrounds.map((v, i) => {\r\n                                        return (\r\n                                            <option value={v} key={i}>Цвет {i + 1}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <label className='change__cover' onClick={() => setSettings({ ...settings, cover: '' })}>\r\n                                <Icon style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center'\r\n                                }} type='stop' size='20' text='удалить обложку' />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <h4>Аватар</h4>\r\n                        <hr />\r\n                        <div className='appearance-wrapper'>\r\n\r\n                            <label className='change__avatar' htmlFor='img__avatar'>\r\n                                <Icon style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center'\r\n                                }} type='camera' size='20' text='загрузить фото' />\r\n                                <input type=\"file\" id=\"img__avatar\" name='img__avatar' style={{ display: 'none' }} onChange={(e) => encodeImageFileAsURL(e, 'avatar')} />\r\n                            </label>\r\n                            <select className='avatar__background__select' name='avatar' value='цвет' onChange={e => changeBackground(e)}>\r\n                                <option value='цвет' disabled=\"disabled\">цвет</option>\r\n                                {\r\n                                    backgrounds.map((v, i) => {\r\n                                        return (\r\n                                            <option value={v} key={i}>Цвет {i + 1}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <label className='change__avatar' onClick={() => setSettings({ ...settings, avatar: '' })}>\r\n                                <Icon style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'center'\r\n                                }} type='stop' size='20' text='удалить аватар' />\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={`settings_tab-settings ${tabs.active === 'settings' ? 'active-tab' : 'not-active-tab'}`}>\r\n                        <h3>Настройки</h3>\r\n                        <h4>Сменить пароль</h4>\r\n                        <hr></hr>\r\n                        <p><small>не забудьте сохранить изменения</small></p>\r\n                        <Input\r\n                            type='text'\r\n                            inputplaceholder='сменить пароль'\r\n                            issetting={\"true\"}\r\n                            minLength='8'\r\n                            size='24'\r\n                            name='password'\r\n                            onChange={onInputChange}\r\n                        />\r\n                        <h4>Удалить страницу</h4>\r\n                        <hr></hr>\r\n                        <Input\r\n                            type='text'\r\n                            inputplaceholder='введите текущий пароль'\r\n                            minLength='8'\r\n                            size='24'\r\n                            name='password_delete'\r\n                            onChange={onInputChange}\r\n                        />\r\n                        <div className='settings button button-danger'>\r\n\r\n                            <Icon type='cross' size='17' text='Удалить страницу' onClick={onDeleteClickHandler} style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                color: 'white'\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={`links settings_tab-links ${tabs.active === 'links' ? 'active-tab' : 'not-active-tab'}`}>\r\n                        <h3>Ссылки</h3>\r\n\r\n                        <Icon type='plus' className='button button-success' size='20' text='Добавить ссылку' style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                            color: 'white'\r\n                        }}\r\n                            onClick={addLinkHandler}\r\n                        />\r\n                        {\r\n                            settings.links !== null && settings.links.data !== undefined && settings.links.data.map((val, index) => {\r\n                                return (\r\n                                    <div className='link__wrapper is_settings' key={index}>\r\n                                        <div className='link__icon is_settings'>\r\n                                            <img src={`img/${settings.links.data[index].type}.png`} alt='icon' />\r\n                                            <select name='type' className='link__select' value='иконка' onChange={e => changeLinkTitleAndLinkAndIcon(e, index)}>\r\n                                                <option value='иконка' disabled=\"disabled\">иконка</option>\r\n                                                <option value=\"phone\">Телефон</option>\r\n                                                {/*  */}\r\n                                                <option value='мессенджеры' disabled=\"disabled\">мессенджеры</option>\r\n                                                <option value=\"telegram\">Telegram</option>\r\n                                                <option value=\"viber\">Viber</option>\r\n                                                <option value=\"whatsapp\">WhatsApp</option>\r\n                                                {/*  */}\r\n                                                <option value='соцсети' disabled=\"disabled\">соцсети</option>\r\n                                                <option value=\"vk\">VK</option>\r\n                                                <option value=\"facebook\">Facebook</option>\r\n                                                <option value=\"instagram\">Instagram</option>\r\n                                                <option value=\"ok\">Одноклассники</option>\r\n                                                <option value=\"tiktok\">TikTok</option>\r\n                                                <option value=\"askfm\">Ask.fm</option>\r\n                                                <option value=\"pikabu\">Pikabu</option>\r\n                                                <option value=\"snapchat\">Snapchat</option>\r\n                                                <option value=\"twitter\">Twitter</option>\r\n                                                <option value=\"f3cool\">F3.cool</option>\r\n                                                <option value=\"youtube\">YouTube</option>\r\n                                                {/*  */}\r\n                                                <option value='соцсети' disabled=\"disabled\">работа, новости, IT</option>\r\n                                                <option value=\"hh\">Head Hunter</option>\r\n                                                <option value=\"vc\">VC.ru</option>\r\n                                                <option value=\"tj\">tjournal</option>\r\n                                                <option value=\"dtf\">dtf.ru</option>\r\n                                                <option value=\"habr\">Habr</option>\r\n                                                <option value=\"linkedin\">LinkedIn</option>\r\n                                                <option value=\"github\" >Github</option>\r\n                                                <option value=\"gitlab\">Gitlab</option>\r\n                                                <option value=\"devianart\">Devianart</option>\r\n                                                <option value=\"behance\">Behance</option>\r\n                                                {/*  */}\r\n                                                <option value='игры' disabled=\"disabled\">игры, стримы, связь</option>\r\n                                                <option value=\"steam\">Steam</option>\r\n                                                <option value=\"epicgames\">Epic Games</option>\r\n                                                <option value=\"origin\">Origin</option>\r\n                                                <option value=\"xboxlive\">XBox Live</option>\r\n                                                <option value=\"psn\">PSN</option>\r\n                                                <option value=\"battlenet\">Battle.net</option>\r\n                                                <option value=\"rockstar\">RockstarSocial Club</option>\r\n                                                <option value=\"uplay\">Uplay</option>\r\n                                                <option value=\"twitch\">Twitch</option>\r\n                                                <option value=\"skype\">Skype</option>\r\n                                                <option value=\"discord\">Discord</option>\r\n                                                {/*  */}\r\n                                                <option value='почта' disabled=\"disabled\">почта</option>\r\n                                                <option value=\"gmail\">G-mail</option>\r\n                                                <option value=\"mailru\">Mail.ru почта</option>\r\n                                                <option value=\"yandexmail\">Yandex почта</option>\r\n                                                <option value=\"email\">E-mail</option>\r\n                                                {/*  */}\r\n                                                <option value='финансы' disabled=\"disabled\">финансы</option>\r\n                                                <option value=\"tinkoff\">Tinkoff</option>\r\n                                                <option value=\"sberbank\">Сбербанк</option>\r\n                                                <option value=\"yandexmoney\">ЮMoney</option>\r\n                                                <option value=\"qiwi\">QIWI</option>\r\n                                                <option value=\"donationalerts\">Donation Alerts</option>\r\n                                                <option value=\"patreon\">Patreon</option>\r\n                                                {/*  */}\r\n                                                <option value='18+' disabled=\"disabled\">18+</option>\r\n                                                <option value=\"pornhub\">Pornhub</option>\r\n                                                <option value=\"onlyfans\">Onlyfans</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className='link__texts'>\r\n                                            <div className='link__title'>\r\n                                                <Input\r\n                                                    inputplaceholder={'заголовок'}\r\n                                                    issetting={\"true\"}\r\n                                                    name={'title'}\r\n                                                    value={val.title !== null ? val.title : ''}\r\n                                                    onChange={e => changeLinkTitleAndLinkAndIcon(e, index)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='link__href'>\r\n                                                <Input\r\n                                                    inputplaceholder={generatePlaceholder(val.type)}\r\n                                                    issetting={\"true\"}\r\n                                                    name={'link'}\r\n                                                    value={val.link !== null ? val.link : ''}\r\n                                                    onChange={e => changeLinkTitleAndLinkAndIcon(e, index)}\r\n                                                />\r\n                                            </div>\r\n                                            <Icon className='link__delete' size='24' type='stop' onClick={() => deleteLinkHandler(index)} />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingsScreen","import { backgrounds } from '../utils/backgrounds'\r\nimport Icon from './Icon'\r\n\r\nconst PrivacyScreen = props => {\r\n    return (\r\n        <>\r\n            <div className=\"main__layout__wrapper-header\" style={{\r\n                background: backgrounds[15]\r\n            }}><h2 onClick={() => window.location = 'http://mysocials.ru/'}> <Icon type='smartphone' size ='37'/>  MYSOCIALS.RU | КОНФИДЕНЦИАЛЬНОСТЬ</h2></div>\r\n            <div className=\"main__layout__wrapper-content\" style={{ flexDirection: 'column' }}>\r\n                <h2> Политика в отношении обработки персональных данных</h2>\r\n                <p>\r\n                    <h3>1. Общие положения</h3>\r\n                    Настоящая политика обработки персональных данных составлена в соответствии с требованиями Федерального закона от 27.07.2006. №152-ФЗ «О персональных данных» и определяет порядок обработки персональных данных и меры по обеспечению безопасности персональных данных, предпринимаемые Петров Алексей Игоревич (далее – Оператор).\r\n                    1.1. Оператор ставит своей важнейшей целью и условием осуществления своей деятельности соблюдение прав и свобод человека и гражданина при обработке его персональных данных, в том числе защиты прав на неприкосновенность частной жизни, личную и семейную тайну.\r\n                    1.2. Настоящая политика Оператора в отношении обработки персональных данных (далее – Политика) применяется ко всей информации, которую Оператор может получить о посетителях веб-сайта http://mysocials.ru.\r\n                </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3>2. Основные понятия, используемые в Политике</h3>\r\n                    2.1. Автоматизированная обработка персональных данных – обработка персональных данных с помощью средств вычислительной техники;\r\n                    2.2. Блокирование персональных данных – временное прекращение обработки персональных данных (за исключением случаев, если обработка необходима для уточнения персональных данных);\r\n                    2.3. Веб-сайт – совокупность графических и информационных материалов, а также программ для ЭВМ и баз данных, обеспечивающих их доступность в сети интернет по сетевому адресу http://mysocials.ru;\r\n                    2.4. Информационная система персональных данных — совокупность содержащихся в базах данных персональных данных, и обеспечивающих их обработку информационных технологий и технических средств;\r\n                    2.5. Обезличивание персональных данных — действия, в результате которых невозможно определить без использования дополнительной информации принадлежность персональных данных конкретному Пользователю или иному субъекту персональных данных;\r\n                    2.6. Обработка персональных данных – любое действие (операция) или совокупность действий (операций), совершаемых с использованием средств автоматизации или без использования таких средств с персональными данными, включая сбор, запись, систематизацию, накопление, хранение, уточнение (обновление, изменение), извлечение, использование, передачу (распространение, предоставление, доступ), обезличивание, блокирование, удаление, уничтожение персональных данных;\r\n                    2.7. Оператор – государственный орган, муниципальный орган, юридическое или физическое лицо, самостоятельно или совместно с другими лицами организующие и (или) осуществляющие обработку персональных данных, а также определяющие цели обработки персональных данных, состав персональных данных, подлежащих обработке, действия (операции), совершаемые с персональными данными;\r\n                    2.8. Персональные данные – любая информация, относящаяся прямо или косвенно к определенному или определяемому Пользователю веб-сайта http://mysocials.ru;\r\n                    2.9. Пользователь – любой посетитель веб-сайта http://mysocials.ru;\r\n                    2.10. Предоставление персональных данных – действия, направленные на раскрытие персональных данных определенному лицу или определенному кругу лиц;\r\n                    2.11. Распространение персональных данных – любые действия, направленные на раскрытие персональных данных неопределенному кругу лиц (передача персональных данных) или на ознакомление с персональными данными неограниченного круга лиц, в том числе обнародование персональных данных в средствах массовой информации, размещение в информационно-телекоммуникационных сетях или предоставление доступа к персональным данным каким-либо иным способом;\r\n                    2.12. Трансграничная передача персональных данных – передача персональных данных на территорию иностранного государства органу власти иностранного государства, иностранному физическому или иностранному юридическому лицу;\r\n                    2.13. Уничтожение персональных данных – любые действия, в результате которых персональные данные уничтожаются безвозвратно с невозможностью дальнейшего восстановления содержания персональных данных в информационной системе персональных данных и (или) уничтожаются материальные носители персональных данных.\r\n               </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3>3. Оператор может обрабатывать следующие персональные данные Пользователя</h3>\r\n                    3.1. Фамилия, имя, отчество;\r\n                    3.2. Электронный адрес;\r\n                    3.3. Номера телефонов;\r\n                    3.4. Год, месяц, дата и место рождения;\r\n                    3.5. Фотографии;\r\n                    3.6. ссылки на социальные сети;\r\n                    3.7. Также на сайте происходит сбор и обработка обезличенных данных о посетителях (в т.ч. файлов «cookie») с помощью сервисов интернет-статистики (Яндекс Метрика и Гугл Аналитика и других).\r\n                    3.8. Вышеперечисленные данные далее по тексту Политики объединены общим понятием Персональные данные.\r\n             </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3> 4. Цели обработки персональных данных</h3>\r\n                    4.1. Цель обработки персональных данных Пользователя — предоставление доступа Пользователю к сервисам, информации и/или материалам, содержащимся на веб-сайте.\r\n                    4.2. Также Оператор имеет право направлять Пользователю уведомления о новых продуктах и услугах, специальных предложениях и различных событиях. Пользователь всегда может отказаться от получения информационных сообщений, направив Оператору письмо на адрес электронной почты al1111997@yandex.ru с пометкой «Отказ от уведомлений о новых продуктах и услугах и специальных предложениях».\r\n                    4.3. Обезличенные данные Пользователей, собираемые с помощью сервисов интернет-статистики, служат для сбора информации о действиях Пользователей на сайте, улучшения качества сайта и его содержания.\r\n            </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3>5. Правовые основания обработки персональных данных</h3>\r\n                    5.1. Оператор обрабатывает персональные данные Пользователя только в случае их заполнения и/или отправки Пользователем самостоятельно через специальные формы, расположенные на сайте http://mysocials.ru. Заполняя соответствующие формы и/или отправляя свои персональные данные Оператору, Пользователь выражает свое согласие с данной Политикой.\r\n                    5.2. Оператор обрабатывает обезличенные данные о Пользователе в случае, если это разрешено в настройках браузера Пользователя (включено сохранение файлов «cookie» и использование технологии JavaScript).\r\n              </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3> 6. Порядок сбора, хранения, передачи и других видов обработки персональных данных</h3>\r\n                    Безопасность персональных данных, которые обрабатываются Оператором, обеспечивается путем реализации правовых, организационных и технических мер, необходимых для выполнения в полном объеме требований действующего законодательства в области защиты персональных данных.\r\n                    6.1. Оператор обеспечивает сохранность персональных данных и принимает все возможные меры, исключающие доступ к персональным данным неуполномоченных лиц.\r\n                    6.2. Персональные данные Пользователя никогда, ни при каких условиях не будут переданы третьим лицам, за исключением случаев, связанных с исполнением действующего законодательства.\r\n                    6.3. В случае выявления неточностей в персональных данных, Пользователь может актуализировать их самостоятельно, путем направления Оператору уведомление на адрес электронной почты Оператора al1111997@yandex.ru с пометкой «Актуализация персональных данных».\r\n                    6.4. Срок обработки персональных данных является неограниченным. Пользователь может в любой момент отозвать свое согласие на обработку персональных данных, направив Оператору уведомление посредством электронной почты на электронный адрес Оператора al1111997@yandex.ru с пометкой «Отзыв согласия на обработку персональных данных».\r\n                </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3>7. Трансграничная передача персональных данных</h3>\r\n                    7.1. Оператор до начала осуществления трансграничной передачи персональных данных обязан убедиться в том, что иностранным государством, на территорию которого предполагается осуществлять передачу персональных данных, обеспечивается надежная защита прав субъектов персональных данных.\r\n                    7.2. Трансграничная передача персональных данных на территории иностранных государств, не отвечающих вышеуказанным требованиям, может осуществляться только в случае наличия согласия в письменной форме субъекта персональных данных на трансграничную передачу его персональных данных и/или исполнения договора, стороной которого является субъект персональных данных.\r\n              </p>\r\n                <br></br>\r\n                <p>\r\n                    <h3>8. Заключительные положения</h3>\r\n                    8.1. Пользователь может получить любые разъяснения по интересующим вопросам, касающимся обработки его персональных данных, обратившись к Оператору с помощью электронной почты al1111997@yandex.ru.\r\n                    8.2. В данном документе будут отражены любые изменения политики обработки персональных данных Оператором. Политика действует бессрочно до замены ее новой версией.\r\n                    8.3. Актуальная версия Политики в свободном доступе расположена в сети Интернет по адресу http://mysocials.ru/privacy.\r\n                </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivacyScreen","import { Switch, Route } from 'react-router-dom';\nimport Layout from './components/Layout'\nimport ProfileScreen from './components/ProfileScreen'\nimport MainScreen from './components/MainScreen'\nimport SettingsScreen from './components/SettingsScreen'\nimport PrivacyScreen from './components/PrivacyScreen';\n\nconst App = (props) => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={process.env.PUBLIC_URL + '/settings'} exact component={SettingsScreen} />\n        <Route path={process.env.PUBLIC_URL + '/privacy'} exact component={PrivacyScreen} />\n        <Route path={process.env.PUBLIC_URL + '/'} exact component={MainScreen} />\n        <Route path={process.env.PUBLIC_URL + '/:username'} component={ProfileScreen} />\n      </Switch>\n    </Layout>\n\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './css/index.css'\nimport './css/media.css'\nimport './css/loader.css'\nimport './css/input.css'\nimport './css/dark.css'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}